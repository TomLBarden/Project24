<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        nJyc/wfcfMqsDhNlPwAAAABJRU5ErkJggg==
</value>
  </data>
</root>