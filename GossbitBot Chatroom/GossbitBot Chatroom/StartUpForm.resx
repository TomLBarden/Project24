<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>